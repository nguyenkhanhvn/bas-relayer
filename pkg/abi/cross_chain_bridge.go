// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package abi

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// TypesTokenMetadata is an auto generated low-level Go binding around an user-defined struct.
type TypesTokenMetadata struct {
	Name          string
	Symbol        string
	OriginChain   *big.Int
	OriginAddress common.Address
}

// CrossChainBridgeMetaData contains all meta data concerning the CrossChainBridge contract.
var CrossChainBridgeMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"contractIRelayHub\",\"name\":\"relayHub\",\"type\":\"address\"},{\"internalType\":\"contractBridgeRouter\",\"name\":\"bridgeRouter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nativeTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nativeTokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"BridgeRouterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChain\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toChain\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"originChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originAddress\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"structTypes.TokenMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"DepositToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromChain\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"originChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originAddress\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"structTypes.TokenMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"WithdrawToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN_METADATA\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"originChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractBridgeRouter\",\"name\":\"otherRouter\",\"type\":\"address\"}],\"name\":\"changeRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"depositNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"}],\"name\":\"getPeggedTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHub\",\"outputs\":[{\"internalType\":\"contractIRelayHub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"blockProofs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"rawReceipt\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"proofPath\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"proofSiblings\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b506040516200352e3803806200352e8339810160408190526200003491620002df565b60048054336001600160a01b03199182168117909255600091825260056020908152604092839020805460ff191660011790556006805483166001600160a01b038981169190911790915560078054909316908716179091558151608081018352848152808201849052468184015291516060830191620000b89185910162000374565b60408051601f19818403018152919052805160209182012060601c90915281518051600092620000ed92849291019062000146565b50602082810151805162000108926001850192019062000146565b5060408201516002820155606090910151600390910180546001600160a01b0319166001600160a01b0390921691909117905550620003ec92505050565b8280546200015490620003af565b90600052602060002090601f016020900481019282620001785760008555620001c3565b82601f106200019357805160ff1916838001178555620001c3565b82800160010185558215620001c3579182015b82811115620001c3578251825591602001919060010190620001a6565b50620001d1929150620001d5565b5090565b5b80821115620001d15760008155600101620001d6565b6001600160a01b03811681146200020257600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002385781810151838201526020016200021e565b8381111562000248576000848401525b50505050565b600082601f8301126200026057600080fd5b81516001600160401b03808211156200027d576200027d62000205565b604051601f8301601f19908116603f01168101908282118183101715620002a857620002a862000205565b81604052838152866020858801011115620002c257600080fd5b620002d58460208301602089016200021b565b9695505050505050565b60008060008060808587031215620002f657600080fd5b84516200030381620001ec565b60208601519094506200031681620001ec565b60408601519093506001600160401b03808211156200033457600080fd5b62000342888389016200024e565b935060608701519150808211156200035957600080fd5b5062000368878288016200024e565b91505092959194509250565b7021b937b9b9a1b430b4b7213934b233b29d60791b815260008251620003a28160118501602087016200021b565b9190910160110192915050565b600181811c90821680620003c457607f821691505b60208210811415620003e657634e487b7160e01b600052602260045260246000fd5b50919050565b61313280620003fc6000396000f3fe6080604052600436106100865760003560e01c80636701ccb5116100595780636701ccb51461012a578063709bc7f31461014a5780637bdf2ec71461015f578063dcdc12c51461017d578063f0194945146101a257600080fd5b8063340ac20f1461008b57806353cc8084146100ad578063558a7297146100ea578063662c7ba51461010a575b600080fd5b34801561009757600080fd5b506100ab6100a6366004612583565b6101b5565b005b3480156100b957600080fd5b506100cd6100c8366004612583565b610247565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f657600080fd5b506100ab6101053660046125ae565b6102c2565b34801561011657600080fd5b506100ab610125366004612630565b61031e565b34801561013657600080fd5b506100ab610145366004612722565b610543565b34801561015657600080fd5b506100cd610726565b34801561016b57600080fd5b506006546001600160a01b03166100cd565b34801561018957600080fd5b50610192610799565b6040516100e194939291906127c6565b6100ab6101b036600461280d565b6108cf565b3360009081526005602052604090205460ff16806101dd57506004546001600160a01b031633145b6101e657600080fd5b600780546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f3e9aaaa36d36b050584098ca9083e20442f6c87221948cb8a6d79c9ef82c5165910160405180910390a15050565b6007546040516312a5445560e11b81523060048201526001600160a01b038381166024830152600092169063254a88aa90604401602060405180830381865afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc9190612832565b92915050565b3360009081526005602052604090205460ff16806102ea57506004546001600160a01b031633145b6102f357600080fd5b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b600654604051630c46a0e160e01b815246600482015230916001600160a01b031690630c46a0e190602401602060405180830381865afa158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a9190612832565b6001600160a01b0316146103b95760405162461bcd60e51b81526004016103b09061284f565b60405180910390fd5b60006103c58787610ae9565b90506103d081610c12565b468160400151146104235760405162461bcd60e51b815260206004820152601f60248201527f7265636569707420706f696e747320746f20616e6f7468657220636861696e0060448201526064016103b0565b60065460208201516040516312e7d79b60e31b81526001600160a01b039092169163973ebcd891610466918d908d908d908d908b908b908f908f906004016128a7565b602060405180830381865afa158015610483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a79190612992565b6104df5760405162461bcd60e51b81526020600482015260096024820152683130b210383937b7b360b91b60448201526064016103b0565b610538818a8a60008181106104f6576104f66129af565b905060200281019061050891906129c5565b8a8a60405160200161051d9493929190612a0c565b60405160208183030381529060405280519060200120610ce4565b505050505050505050565b600654604051630c46a0e160e01b815246600482015230916001600160a01b031690630c46a0e190602401602060405180830381865afa15801561058b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105af9190612832565b6001600160a01b0316146105d55760405162461bcd60e51b81526004016103b09061284f565b6003546001600160a01b038581169116141561062a5760405162461bcd60e51b81526020600482015260146024820152736e617469766520746f6b656e206164647265737360601b60448201526064016103b0565b600654604051630c46a0e160e01b8152600481018590526000916001600160a01b031690630c46a0e190602401602060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106989190612832565b90506001600160a01b0381166106ea5760405162461bcd60e51b81526020600482015260176024820152761d1bd09c9a5919d9481b9bdd081c9959da5cdd195c9959604a1b60448201526064016103b0565b60006106f586610e5c565b80519091506107105761070b8686868587610f3b565b61071e565b61071e8686868587866113a6565b505050505050565b6007546040805163557887a160e11b815290516000926001600160a01b03169163aaf10f429160048083019260209291908290030181865afa158015610770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107949190612832565b905090565b6000805481906107a890612a2e565b80601f01602080910402602001604051908101604052809291908181526020018280546107d490612a2e565b80156108215780601f106107f657610100808354040283529160200191610821565b820191906000526020600020905b81548152906001019060200180831161080457829003601f168201915b50505050509080600101805461083690612a2e565b80601f016020809104026020016040519081016040528092919081815260200182805461086290612a2e565b80156108af5780601f10610884576101008083540402835291602001916108af565b820191906000526020600020905b81548152906001019060200180831161089257829003601f168201915b5050505060028301546003909301549192916001600160a01b0316905084565b600654604051630c46a0e160e01b815246600482015230916001600160a01b031690630c46a0e190602401602060405180830381865afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190612832565b6001600160a01b0316146109615760405162461bcd60e51b81526004016103b09061284f565b600654604051630c46a0e160e01b8152600481018490526000916001600160a01b031690630c46a0e190602401602060405180830381865afa1580156109ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cf9190612832565b90506001600160a01b038116610a215760405162461bcd60e51b81526020600482015260176024820152761d1bd09c9a5919d9481b9bdd081c9959da5cdd195c9959604a1b60448201526064016103b0565b6007546003546040516312a5445560e11b81526001600160a01b0384811660048301529182166024820152600092919091169063254a88aa90604401602060405180830381865afa158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e9190612832565b6003546040519192506001600160a01b0380861692339288926000805160206130dd83398151915292610adb924692169088903490600090612b03565b60405180910390a450505050565b610af16124c4565b6000610b3a610b3585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061173892505050565b611765565b9050600481511015610b7c5760405162461bcd60e51b815260206004820152600b60248201526a189859081c9958d95a5c1d60aa1b60448201526064016103b0565b610b9f81600081518110610b9257610b926129af565b602002602001015161187b565b600114610bdf5760405162461bcd60e51b815260206004820152600e60248201526d1d1e081a5cc81c995d995c9d195960921b60448201526064016103b0565b610c0b82610c0683600381518110610bf957610bf96129af565b6020026020010151611765565b6118c9565b5092915050565b80516006546020830151604051630c46a0e160e01b815260048101919091526001600160a01b039283169290911690630c46a0e190602401602060405180830381865afa158015610c67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8b9190612832565b6001600160a01b031614610ce15760405162461bcd60e51b815260206004820152601f60248201527f6576656e742066726f6d206e6f7420616c6c6f77656420636f6e74726163740060448201526064016103b0565b50565b60008181526008602052604090205460ff1615610d385760405162461bcd60e51b81526020600482015260126024820152711c1c9bdbd988185b1c9958591e481d5cd95960721b60448201526064016103b0565b6000818152600860205260409020805460ff1916600117905560035460c08301516001600160a01b0390811691161415610db35781608001516001600160a01b03166108fc8360e001519081150290604051600060405180830381858888f19350505050158015610dad573d6000803e3d6000fd5b50610de9565b46826101000151604001511415610de057610ddb82608001518360c001518460e00151611bd6565b610de9565b610de982611e89565b81608001516001600160a01b031682606001516001600160a01b031683602001517f2295be0bafe4991e6241da8918d557775630cdaaec17b6b5d8eae6a2b3d217d48560a001518660c001518760e00151886101000151604051610e509493929190612bd9565b60405180910390a45050565b60408051808201909152600080825260208201526003546001600160a01b0383811691161415610e9f575050604080518082019091526000808252602082015290565b816001600160a01b031663df1f29ee6040518163ffffffff1660e01b81526004016040805180830381865afa925050508015610ef8575060408051601f3d908101601f19168201909252610ef591810190612c16565b60015b610f0157610f22565b604080518082019091529182526001600160a01b0316602082015292915050565b5050604080518082019091526000808252602082015290565b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610f82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa69190612c3b565b604051636eb1769f60e11b81523360048201523060248201529091506000906001600160a01b0388169063dd62ed3e90604401602060405180830381865afa158015610ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101a9190612c3b565b9050808311156110655760405162461bcd60e51b8152602060048201526016602482015275696e73756666696369656e7420616c6c6f77616e636560501b60448201526064016103b0565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038816906323b872dd906064016020604051808303816000875af11580156110b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dc9190612992565b6111195760405162461bcd60e51b815260206004820152600e60248201526d31b0b713ba103a3930b739b332b960911b60448201526064016103b0565b6040516370a0823160e01b81523060048201526000906001600160a01b038916906370a0823190602401602060405180830381865afa158015611160573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111849190612c3b565b90506111908484612c6a565b8110156111d55760405162461bcd60e51b815260206004820152601360248201527234b731b7b93932b1ba103132b430bb34b7bab960691b60448201526064016103b0565b60006111e18986611f0c565b6007546040516312a5445560e11b81526001600160a01b0389811660048301528c811660248301529293506000929091169063254a88aa90604401602060405180830381865afa158015611239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125d9190612832565b9050600060405180608001604052808c6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156112aa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112d29190810190612d3f565b81526020018c6001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015611315573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261133d9190810190612d3f565b81526020014681526020018c6001600160a01b03168152509050886001600160a01b0316336001600160a01b03168b6000805160206130dd833981519152468f878988604051611391959493929190612d74565b60405180910390a45050505050505050505050565b80516001600160a01b0387166000908152600960205260409020541480156113f357506020808201516001600160a01b038881166000908152600990935260409092206001015482169116145b6114495760405162461bcd60e51b815260206004820152602160248201527f6e6f6e2d70656767656420636f6e7472616374206e6f7420737570706f7274656044820152601960fa1b60648201526084016103b0565b6040516370a0823160e01b815233600482015282906001600160a01b038816906370a0823190602401602060405180830381865afa15801561148f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b39190612c3b565b10156114f85760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064016103b0565b805160009086141561150f5750602081015161158c565b60075460208301516040516312a5445560e11b81526001600160a01b038781166004830152918216602482015291169063254a88aa90604401602060405180830381865afa158015611565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115899190612832565b90505b604051632770a7eb60e21b8152336004820152602481018490526001600160a01b03881690639dc29fac90604401600060405180830381600087803b1580156115d457600080fd5b505af11580156115e8573d6000803e3d6000fd5b5050505060006040518060800160405280896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611637573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261165f9190810190612d3f565b8152602001896001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116ca9190810190612d3f565b81526020018460000151815260200184602001516001600160a01b03168152509050856001600160a01b0316336001600160a01b0316886000805160206130dd833981519152468c878a88604051611726959493929190612d74565b60405180910390a45050505050505050565b60408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b606061177082612040565b61177957600080fd5b600061178483612079565b905060008167ffffffffffffffff8111156117a1576117a1612c82565b6040519080825280602002602001820160405280156117e657816020015b60408051808201909152600080825260208201528152602001906001900390816117bf5790505b50905060006117f885602001516120fc565b85602001516118079190612c6a565b90506000805b848110156118705761181e8361217d565b9150604051806040016040528083815260200184815250848281518110611847576118476129af565b602090810291909101015261185c8284612c6a565b92508061186881612db8565b91505061180d565b509195945050505050565b80516000901580159061189057508151602110155b61189957600080fd5b6000806118a584612221565b8151919350915060208210156118c15760208290036101000a90045b949350505050565b6001815110156119065760405162461bcd60e51b8152602060048201526008602482015267626164206c6f677360c01b60448201526064016103b0565b60005b8151811015611b9a576000611929838381518110610bf957610bf96129af565b90506003815110156119675760405162461bcd60e51b8152602060048201526007602482015266626164206c6f6760c81b60448201526064016103b0565b61198a8160008151811061197d5761197d6129af565b6020026020010151612268565b6001600160a01b03168085526119e25760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420636f6e74726163742061646472657373000000000000000060448201526064016103b0565b60006119fa82600181518110610bf957610bf96129af565b9050600181511015611a3b5760405162461bcd60e51b815260206004820152600a60248201526962616420746f7069637360b01b60448201526064016103b0565b6000805160206130dd833981519152611a6d82600081518110611a6057611a606129af565b6020026020010151612282565b611a7690612dd3565b1415611b8557600481511015611ac05760405162461bcd60e51b815260206004820152600f60248201526e626164206465706f736974206c6f6760881b60448201526064016103b0565b611ad681600181518110610b9257610b926129af565b60408601528051611af49082906002908110610b9257610b926129af565b6001600160a01b031660608601528051611b1b9082906003908110610b9257610b926129af565b6001600160a01b031660808601528151611b429083906002908110611a6057611a606129af565b806020019051810190611b559190612df7565b6101008a015260e08901526001600160a01b0390811660c08901521660a087015260209095019490945250505050565b50508080611b9290612db8565b915050611909565b5060405162461bcd60e51b815260206004820152601060248201526f77726f6e67206d61696e20746f70696360801b60448201526064016103b0565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3a9190612ee5565b905060128160ff161115611c845760405162461bcd60e51b8152602060048201526011602482015270646563696d616c73206f766572666c6f7760781b60448201526064016103b0565b6000611c91826012612f08565b611c9c90600a61300f565b611ca6908461301e565b6040516370a0823160e01b81526001600160a01b0387811660048301529192506000918616906370a0823190602401602060405180830381865afa158015611cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d169190612c3b565b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018590529192509086169063a9059cbb906044016020604051808303816000875af1158015611d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8d9190612992565b611dca5760405162461bcd60e51b815260206004820152600e60248201526d31b0b713ba103a3930b739b332b960911b60448201526064016103b0565b6040516370a0823160e01b81526001600160a01b038781166004830152600091908716906370a0823190602401602060405180830381865afa158015611e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e389190612c3b565b905080821115611e805760405162461bcd60e51b815260206004820152601360248201527234b731b7b93932b1ba103132b430bb34b7bab960691b60448201526064016103b0565b50505050505050565b611e9c8160c00151826101000151612300565b608082015160e08301516040516340c10f1960e01b81526001600160a01b03928316600482015260248101919091529116906340c10f1990604401600060405180830381600087803b158015611ef157600080fd5b505af1158015611f05573d6000803e3d6000fd5b5050505050565b60006012836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f729190612ee5565b60ff161115611fb75760405162461bcd60e51b8152602060048201526011602482015270646563696d616c73206f766572666c6f7760781b60448201526064016103b0565b826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ff5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120199190612ee5565b612024906012612f08565b61202f90600a61300f565b6120399083613040565b9392505050565b805160009061205157506000919050565b6020820151805160001a9060c082101561206f575060009392505050565b5060019392505050565b805160009061208a57506000919050565b60008061209a84602001516120fc565b84602001516120a99190612c6a565b90506000846000015185602001516120c19190612c6a565b90505b808210156120f3576120d58261217d565b6120df9083612c6a565b9150826120eb81612db8565b9350506120c4565b50909392505050565b8051600090811a60808110156121155750600092915050565b60b8811080612130575060c08110801590612130575060f881105b1561213e5750600192915050565b60c081101561216b57612153600160b8612f08565b6121609060ff168261305f565b612039906001612c6a565b612153600160f8612f08565b50919050565b80516000908190811a60808110156121985760019150610c0b565b60b88110156121be576121ac60808261305f565b6121b7906001612c6a565b9150610c0b565b60c08110156121eb5760b78103600185019450806020036101000a85510460018201810193505050610c0b565b60f88110156121ff576121ac60c08261305f565b60019390930151602084900360f7016101000a900490920160f5190192915050565b600080600061223384602001516120fc565b905060008185602001516122479190612c6a565b9050600082866000015161225b919061305f565b9196919550909350505050565b805160009060151461227957600080fd5b6102bc8261187b565b805160609061229057600080fd5b60008061229c84612221565b9150915060008167ffffffffffffffff8111156122bb576122bb612c82565b6040519080825280601f01601f1916602001820160405280156122e5576020820181803683370190505b509050602081016122f7848285612444565b50949350505050565b6001600160a01b038281166000908152600960205260408120600101549091161561232c5750816102bc565b600754606083015160405160009283926001600160a01b039091169161235b9190889088903090602401613076565b60408051601f198184030181529181526020820180516001600160e01b03166386a5360b60e01b1790525161239091906130b4565b600060405180830381855af49150503d80600081146123cb576040519150601f19603f3d011682016040523d82523d6000602084013e6123d0565b606091505b5091509150816123e35780518060208301fd5b50506040805180820182528382015181526060909301516001600160a01b0390811660208086019182528683166000908152600990915292909220935184559051600190930180546001600160a01b03191693909116929092179091555090565b8061244e57505050565b602081106124865782518252612465602084612c6a565b9250612472602083612c6a565b915061247f60208261305f565b905061244e565b80156124bf576000600161249b83602061305f565b6124a7906101006130d0565b6124b1919061305f565b845184518216911916178352505b505050565b60405180610120016040528060006001600160a01b03168152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001612569604051806080016040528060608152602001606081526020016000815260200160006001600160a01b031681525090565b905290565b6001600160a01b0381168114610ce157600080fd5b60006020828403121561259557600080fd5b81356120398161256e565b8015158114610ce157600080fd5b600080604083850312156125c157600080fd5b82356125cc8161256e565b915060208301356125dc816125a0565b809150509250929050565b60008083601f8401126125f957600080fd5b50813567ffffffffffffffff81111561261157600080fd5b60208301915083602082850101111561262957600080fd5b9250929050565b6000806000806000806000806080898b03121561264c57600080fd5b883567ffffffffffffffff8082111561266457600080fd5b818b0191508b601f83011261267857600080fd5b81358181111561268757600080fd5b8c60208260051b850101111561269c57600080fd5b60209283019a509850908a013590808211156126b757600080fd5b6126c38c838d016125e7565b909850965060408b01359150808211156126dc57600080fd5b6126e88c838d016125e7565b909650945060608b013591508082111561270157600080fd5b5061270e8b828c016125e7565b999c989b5096995094979396929594505050565b6000806000806080858703121561273857600080fd5b84356127438161256e565b935060208501359250604085013561275a8161256e565b9396929550929360600135925050565b60005b8381101561278557818101518382015260200161276d565b83811115612794576000848401525b50505050565b600081518084526127b281602086016020860161276a565b601f01601f19169290920160200192915050565b6080815260006127d9608083018761279a565b82810360208401526127eb818761279a565b604084019590955250506001600160a01b039190911660609091015292915050565b6000806040838503121561282057600080fd5b8235915060208301356125dc8161256e565b60006020828403121561284457600080fd5b81516120398161256e565b602080825260159082015274189c9a5919d9481b9bdd081c9959da5cdd195c9959605a1b604082015260600190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260a06020820152600060a0820189815260c08301905060c08a60051b8401018b60005b8c8110156129425785830360bf19018452368e9003601e19018235126128f257600080fd5b8d82350167ffffffffffffffff8135111561290c57600080fd5b803536038f131561291c57600080fd5b61292b8482356020840161287e565b6020958601959094509290920191506001016128cd565b50508381036040850152612957818a8c61287e565b915050828103606084015261296d81878961287e565b9050828103608084015261298281858761287e565b9c9b505050505050505050505050565b6000602082840312156129a457600080fd5b8151612039816125a0565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126129dc57600080fd5b83018035915067ffffffffffffffff8211156129f757600080fd5b60200191503681900382131561262957600080fd5b8385823760008482016000815283858237600093019283525090949350505050565b600181811c90821680612a4257607f821691505b6020821081141561217757634e487b7160e01b600052602260045260246000fd5b8054600090600181811c9080831680612a7d57607f831692505b6020808410821415612a9f57634e487b7160e01b600052602260045260246000fd5b83885260208801828015612aba5760018114612acb57612af6565b60ff19871682528282019750612af6565b60008981526020902060005b87811015612af057815484820152908601908401612ad7565b83019850505b5050505050505092915050565b858152600060018060a01b038087166020840152808616604084015284606084015260a06080840152608060a0840152612b41610120840185612a63565b838103609f190160c0850152612b5a8160018701612a63565b9050600285015460e08501528160038601541661010085015280925050509695505050505050565b6000815160808452612b97608085018261279a565b905060208301518482036020860152612bb0828261279a565b604085810151908701526060948501516001600160a01b03169490950193909352509192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612c0c90830184612b82565b9695505050505050565b60008060408385031215612c2957600080fd5b8251915060208301516125dc8161256e565b600060208284031215612c4d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612c7d57612c7d612c54565b500190565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715612cbb57612cbb612c82565b60405290565b600082601f830112612cd257600080fd5b815167ffffffffffffffff80821115612ced57612ced612c82565b604051601f8301601f19908116603f01168101908282118183101715612d1557612d15612c82565b81604052838152866020858801011115612d2e57600080fd5b612c0c84602083016020890161276a565b600060208284031215612d5157600080fd5b815167ffffffffffffffff811115612d6857600080fd5b6118c184828501612cc1565b8581526001600160a01b038581166020830152841660408201526060810183905260a060808201819052600090612dad90830184612b82565b979650505050505050565b6000600019821415612dcc57612dcc612c54565b5060010190565b805160208083015191908110156121775760001960209190910360031b1b16919050565b600080600080600060a08688031215612e0f57600080fd5b855194506020860151612e218161256e565b6040870151909450612e328161256e565b60608701516080880151919450925067ffffffffffffffff80821115612e5757600080fd5b908701906080828a031215612e6b57600080fd5b612e73612c98565b825182811115612e8257600080fd5b612e8e8b828601612cc1565b825250602083015182811115612ea357600080fd5b612eaf8b828601612cc1565b6020830152506040830151604082015260608301519250612ecf8361256e565b8260608201528093505050509295509295909350565b600060208284031215612ef757600080fd5b815160ff8116811461203957600080fd5b600060ff821660ff841680821015612f2257612f22612c54565b90039392505050565b600181815b80851115612f66578160001904821115612f4c57612f4c612c54565b80851615612f5957918102915b93841c9390800290612f30565b509250929050565b600082612f7d575060016102bc565b81612f8a575060006102bc565b8160018114612fa05760028114612faa57612fc6565b60019150506102bc565b60ff841115612fbb57612fbb612c54565b50506001821b6102bc565b5060208310610133831016604e8410600b8410161715612fe9575081810a6102bc565b612ff38383612f2b565b806000190482111561300757613007612c54565b029392505050565b600061203960ff841683612f6e565b60008261303b57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561305a5761305a612c54565b500290565b60008282101561307157613071612c54565b500390565b600060018060a01b0380871683528086166020840152608060408401526130a06080840186612b82565b915080841660608401525095945050505050565b600082516130c681846020870161276a565b9190910192915050565b60006120398383612f6e56fe52e2a71d8eeeaf64c3fa0a51a00f5cd6c4d0e7847d213c8d68d823a4b4288d7ea2646970667358221220c7ed1b9e9730936a71a344435462d8f36747e4d0b76d137909c6561859aff63d64736f6c634300080a0033",
}

// CrossChainBridgeABI is the input ABI used to generate the binding from.
// Deprecated: Use CrossChainBridgeMetaData.ABI instead.
var CrossChainBridgeABI = CrossChainBridgeMetaData.ABI

// CrossChainBridgeBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use CrossChainBridgeMetaData.Bin instead.
var CrossChainBridgeBin = CrossChainBridgeMetaData.Bin

// DeployCrossChainBridge deploys a new Ethereum contract, binding an instance of CrossChainBridge to it.
func DeployCrossChainBridge(auth *bind.TransactOpts, backend bind.ContractBackend, relayHub common.Address, bridgeRouter common.Address, nativeTokenName string, nativeTokenSymbol string) (common.Address, *types.Transaction, *CrossChainBridge, error) {
	parsed, err := CrossChainBridgeMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(CrossChainBridgeBin), backend, relayHub, bridgeRouter, nativeTokenName, nativeTokenSymbol)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &CrossChainBridge{CrossChainBridgeCaller: CrossChainBridgeCaller{contract: contract}, CrossChainBridgeTransactor: CrossChainBridgeTransactor{contract: contract}, CrossChainBridgeFilterer: CrossChainBridgeFilterer{contract: contract}}, nil
}

// CrossChainBridge is an auto generated Go binding around an Ethereum contract.
type CrossChainBridge struct {
	CrossChainBridgeCaller     // Read-only binding to the contract
	CrossChainBridgeTransactor // Write-only binding to the contract
	CrossChainBridgeFilterer   // Log filterer for contract events
}

// CrossChainBridgeCaller is an auto generated read-only Go binding around an Ethereum contract.
type CrossChainBridgeCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CrossChainBridgeTransactor is an auto generated write-only Go binding around an Ethereum contract.
type CrossChainBridgeTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CrossChainBridgeFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type CrossChainBridgeFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CrossChainBridgeSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type CrossChainBridgeSession struct {
	Contract     *CrossChainBridge // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// CrossChainBridgeCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type CrossChainBridgeCallerSession struct {
	Contract *CrossChainBridgeCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// CrossChainBridgeTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type CrossChainBridgeTransactorSession struct {
	Contract     *CrossChainBridgeTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// CrossChainBridgeRaw is an auto generated low-level Go binding around an Ethereum contract.
type CrossChainBridgeRaw struct {
	Contract *CrossChainBridge // Generic contract binding to access the raw methods on
}

// CrossChainBridgeCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type CrossChainBridgeCallerRaw struct {
	Contract *CrossChainBridgeCaller // Generic read-only contract binding to access the raw methods on
}

// CrossChainBridgeTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type CrossChainBridgeTransactorRaw struct {
	Contract *CrossChainBridgeTransactor // Generic write-only contract binding to access the raw methods on
}

// NewCrossChainBridge creates a new instance of CrossChainBridge, bound to a specific deployed contract.
func NewCrossChainBridge(address common.Address, backend bind.ContractBackend) (*CrossChainBridge, error) {
	contract, err := bindCrossChainBridge(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &CrossChainBridge{CrossChainBridgeCaller: CrossChainBridgeCaller{contract: contract}, CrossChainBridgeTransactor: CrossChainBridgeTransactor{contract: contract}, CrossChainBridgeFilterer: CrossChainBridgeFilterer{contract: contract}}, nil
}

// NewCrossChainBridgeCaller creates a new read-only instance of CrossChainBridge, bound to a specific deployed contract.
func NewCrossChainBridgeCaller(address common.Address, caller bind.ContractCaller) (*CrossChainBridgeCaller, error) {
	contract, err := bindCrossChainBridge(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &CrossChainBridgeCaller{contract: contract}, nil
}

// NewCrossChainBridgeTransactor creates a new write-only instance of CrossChainBridge, bound to a specific deployed contract.
func NewCrossChainBridgeTransactor(address common.Address, transactor bind.ContractTransactor) (*CrossChainBridgeTransactor, error) {
	contract, err := bindCrossChainBridge(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &CrossChainBridgeTransactor{contract: contract}, nil
}

// NewCrossChainBridgeFilterer creates a new log filterer instance of CrossChainBridge, bound to a specific deployed contract.
func NewCrossChainBridgeFilterer(address common.Address, filterer bind.ContractFilterer) (*CrossChainBridgeFilterer, error) {
	contract, err := bindCrossChainBridge(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &CrossChainBridgeFilterer{contract: contract}, nil
}

// bindCrossChainBridge binds a generic wrapper to an already deployed contract.
func bindCrossChainBridge(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(CrossChainBridgeABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CrossChainBridge *CrossChainBridgeRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _CrossChainBridge.Contract.CrossChainBridgeCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CrossChainBridge *CrossChainBridgeRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.CrossChainBridgeTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CrossChainBridge *CrossChainBridgeRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.CrossChainBridgeTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CrossChainBridge *CrossChainBridgeCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _CrossChainBridge.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CrossChainBridge *CrossChainBridgeTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CrossChainBridge *CrossChainBridgeTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.contract.Transact(opts, method, params...)
}

// NATIVETOKENMETADATA is a free data retrieval call binding the contract method 0xdcdc12c5.
//
// Solidity: function NATIVE_TOKEN_METADATA() view returns(string name, string symbol, uint256 originChain, address originAddress)
func (_CrossChainBridge *CrossChainBridgeCaller) NATIVETOKENMETADATA(opts *bind.CallOpts) (struct {
	Name          string
	Symbol        string
	OriginChain   *big.Int
	OriginAddress common.Address
}, error) {
	var out []interface{}
	err := _CrossChainBridge.contract.Call(opts, &out, "NATIVE_TOKEN_METADATA")

	outstruct := new(struct {
		Name          string
		Symbol        string
		OriginChain   *big.Int
		OriginAddress common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Name = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Symbol = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.OriginChain = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.OriginAddress = *abi.ConvertType(out[3], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// NATIVETOKENMETADATA is a free data retrieval call binding the contract method 0xdcdc12c5.
//
// Solidity: function NATIVE_TOKEN_METADATA() view returns(string name, string symbol, uint256 originChain, address originAddress)
func (_CrossChainBridge *CrossChainBridgeSession) NATIVETOKENMETADATA() (struct {
	Name          string
	Symbol        string
	OriginChain   *big.Int
	OriginAddress common.Address
}, error) {
	return _CrossChainBridge.Contract.NATIVETOKENMETADATA(&_CrossChainBridge.CallOpts)
}

// NATIVETOKENMETADATA is a free data retrieval call binding the contract method 0xdcdc12c5.
//
// Solidity: function NATIVE_TOKEN_METADATA() view returns(string name, string symbol, uint256 originChain, address originAddress)
func (_CrossChainBridge *CrossChainBridgeCallerSession) NATIVETOKENMETADATA() (struct {
	Name          string
	Symbol        string
	OriginChain   *big.Int
	OriginAddress common.Address
}, error) {
	return _CrossChainBridge.Contract.NATIVETOKENMETADATA(&_CrossChainBridge.CallOpts)
}

// GetPeggedTokenAddress is a free data retrieval call binding the contract method 0x53cc8084.
//
// Solidity: function getPeggedTokenAddress(address fromToken) view returns(address)
func (_CrossChainBridge *CrossChainBridgeCaller) GetPeggedTokenAddress(opts *bind.CallOpts, fromToken common.Address) (common.Address, error) {
	var out []interface{}
	err := _CrossChainBridge.contract.Call(opts, &out, "getPeggedTokenAddress", fromToken)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPeggedTokenAddress is a free data retrieval call binding the contract method 0x53cc8084.
//
// Solidity: function getPeggedTokenAddress(address fromToken) view returns(address)
func (_CrossChainBridge *CrossChainBridgeSession) GetPeggedTokenAddress(fromToken common.Address) (common.Address, error) {
	return _CrossChainBridge.Contract.GetPeggedTokenAddress(&_CrossChainBridge.CallOpts, fromToken)
}

// GetPeggedTokenAddress is a free data retrieval call binding the contract method 0x53cc8084.
//
// Solidity: function getPeggedTokenAddress(address fromToken) view returns(address)
func (_CrossChainBridge *CrossChainBridgeCallerSession) GetPeggedTokenAddress(fromToken common.Address) (common.Address, error) {
	return _CrossChainBridge.Contract.GetPeggedTokenAddress(&_CrossChainBridge.CallOpts, fromToken)
}

// GetRelayHub is a free data retrieval call binding the contract method 0x7bdf2ec7.
//
// Solidity: function getRelayHub() view returns(address)
func (_CrossChainBridge *CrossChainBridgeCaller) GetRelayHub(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _CrossChainBridge.contract.Call(opts, &out, "getRelayHub")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetRelayHub is a free data retrieval call binding the contract method 0x7bdf2ec7.
//
// Solidity: function getRelayHub() view returns(address)
func (_CrossChainBridge *CrossChainBridgeSession) GetRelayHub() (common.Address, error) {
	return _CrossChainBridge.Contract.GetRelayHub(&_CrossChainBridge.CallOpts)
}

// GetRelayHub is a free data retrieval call binding the contract method 0x7bdf2ec7.
//
// Solidity: function getRelayHub() view returns(address)
func (_CrossChainBridge *CrossChainBridgeCallerSession) GetRelayHub() (common.Address, error) {
	return _CrossChainBridge.Contract.GetRelayHub(&_CrossChainBridge.CallOpts)
}

// GetTokenImplementation is a free data retrieval call binding the contract method 0x709bc7f3.
//
// Solidity: function getTokenImplementation() view returns(address)
func (_CrossChainBridge *CrossChainBridgeCaller) GetTokenImplementation(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _CrossChainBridge.contract.Call(opts, &out, "getTokenImplementation")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetTokenImplementation is a free data retrieval call binding the contract method 0x709bc7f3.
//
// Solidity: function getTokenImplementation() view returns(address)
func (_CrossChainBridge *CrossChainBridgeSession) GetTokenImplementation() (common.Address, error) {
	return _CrossChainBridge.Contract.GetTokenImplementation(&_CrossChainBridge.CallOpts)
}

// GetTokenImplementation is a free data retrieval call binding the contract method 0x709bc7f3.
//
// Solidity: function getTokenImplementation() view returns(address)
func (_CrossChainBridge *CrossChainBridgeCallerSession) GetTokenImplementation() (common.Address, error) {
	return _CrossChainBridge.Contract.GetTokenImplementation(&_CrossChainBridge.CallOpts)
}

// ChangeRouter is a paid mutator transaction binding the contract method 0x340ac20f.
//
// Solidity: function changeRouter(address otherRouter) returns()
func (_CrossChainBridge *CrossChainBridgeTransactor) ChangeRouter(opts *bind.TransactOpts, otherRouter common.Address) (*types.Transaction, error) {
	return _CrossChainBridge.contract.Transact(opts, "changeRouter", otherRouter)
}

// ChangeRouter is a paid mutator transaction binding the contract method 0x340ac20f.
//
// Solidity: function changeRouter(address otherRouter) returns()
func (_CrossChainBridge *CrossChainBridgeSession) ChangeRouter(otherRouter common.Address) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.ChangeRouter(&_CrossChainBridge.TransactOpts, otherRouter)
}

// ChangeRouter is a paid mutator transaction binding the contract method 0x340ac20f.
//
// Solidity: function changeRouter(address otherRouter) returns()
func (_CrossChainBridge *CrossChainBridgeTransactorSession) ChangeRouter(otherRouter common.Address) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.ChangeRouter(&_CrossChainBridge.TransactOpts, otherRouter)
}

// DepositNative is a paid mutator transaction binding the contract method 0xf0194945.
//
// Solidity: function depositNative(uint256 toChain, address toAddress) payable returns()
func (_CrossChainBridge *CrossChainBridgeTransactor) DepositNative(opts *bind.TransactOpts, toChain *big.Int, toAddress common.Address) (*types.Transaction, error) {
	return _CrossChainBridge.contract.Transact(opts, "depositNative", toChain, toAddress)
}

// DepositNative is a paid mutator transaction binding the contract method 0xf0194945.
//
// Solidity: function depositNative(uint256 toChain, address toAddress) payable returns()
func (_CrossChainBridge *CrossChainBridgeSession) DepositNative(toChain *big.Int, toAddress common.Address) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.DepositNative(&_CrossChainBridge.TransactOpts, toChain, toAddress)
}

// DepositNative is a paid mutator transaction binding the contract method 0xf0194945.
//
// Solidity: function depositNative(uint256 toChain, address toAddress) payable returns()
func (_CrossChainBridge *CrossChainBridgeTransactorSession) DepositNative(toChain *big.Int, toAddress common.Address) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.DepositNative(&_CrossChainBridge.TransactOpts, toChain, toAddress)
}

// DepositToken is a paid mutator transaction binding the contract method 0x6701ccb5.
//
// Solidity: function depositToken(address fromToken, uint256 toChain, address toAddress, uint256 totalAmount) returns()
func (_CrossChainBridge *CrossChainBridgeTransactor) DepositToken(opts *bind.TransactOpts, fromToken common.Address, toChain *big.Int, toAddress common.Address, totalAmount *big.Int) (*types.Transaction, error) {
	return _CrossChainBridge.contract.Transact(opts, "depositToken", fromToken, toChain, toAddress, totalAmount)
}

// DepositToken is a paid mutator transaction binding the contract method 0x6701ccb5.
//
// Solidity: function depositToken(address fromToken, uint256 toChain, address toAddress, uint256 totalAmount) returns()
func (_CrossChainBridge *CrossChainBridgeSession) DepositToken(fromToken common.Address, toChain *big.Int, toAddress common.Address, totalAmount *big.Int) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.DepositToken(&_CrossChainBridge.TransactOpts, fromToken, toChain, toAddress, totalAmount)
}

// DepositToken is a paid mutator transaction binding the contract method 0x6701ccb5.
//
// Solidity: function depositToken(address fromToken, uint256 toChain, address toAddress, uint256 totalAmount) returns()
func (_CrossChainBridge *CrossChainBridgeTransactorSession) DepositToken(fromToken common.Address, toChain *big.Int, toAddress common.Address, totalAmount *big.Int) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.DepositToken(&_CrossChainBridge.TransactOpts, fromToken, toChain, toAddress, totalAmount)
}

// SetOperator is a paid mutator transaction binding the contract method 0x558a7297.
//
// Solidity: function setOperator(address operator_, bool status_) returns()
func (_CrossChainBridge *CrossChainBridgeTransactor) SetOperator(opts *bind.TransactOpts, operator_ common.Address, status_ bool) (*types.Transaction, error) {
	return _CrossChainBridge.contract.Transact(opts, "setOperator", operator_, status_)
}

// SetOperator is a paid mutator transaction binding the contract method 0x558a7297.
//
// Solidity: function setOperator(address operator_, bool status_) returns()
func (_CrossChainBridge *CrossChainBridgeSession) SetOperator(operator_ common.Address, status_ bool) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.SetOperator(&_CrossChainBridge.TransactOpts, operator_, status_)
}

// SetOperator is a paid mutator transaction binding the contract method 0x558a7297.
//
// Solidity: function setOperator(address operator_, bool status_) returns()
func (_CrossChainBridge *CrossChainBridgeTransactorSession) SetOperator(operator_ common.Address, status_ bool) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.SetOperator(&_CrossChainBridge.TransactOpts, operator_, status_)
}

// Withdraw is a paid mutator transaction binding the contract method 0x662c7ba5.
//
// Solidity: function withdraw(bytes[] blockProofs, bytes rawReceipt, bytes proofPath, bytes proofSiblings) returns()
func (_CrossChainBridge *CrossChainBridgeTransactor) Withdraw(opts *bind.TransactOpts, blockProofs [][]byte, rawReceipt []byte, proofPath []byte, proofSiblings []byte) (*types.Transaction, error) {
	return _CrossChainBridge.contract.Transact(opts, "withdraw", blockProofs, rawReceipt, proofPath, proofSiblings)
}

// Withdraw is a paid mutator transaction binding the contract method 0x662c7ba5.
//
// Solidity: function withdraw(bytes[] blockProofs, bytes rawReceipt, bytes proofPath, bytes proofSiblings) returns()
func (_CrossChainBridge *CrossChainBridgeSession) Withdraw(blockProofs [][]byte, rawReceipt []byte, proofPath []byte, proofSiblings []byte) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.Withdraw(&_CrossChainBridge.TransactOpts, blockProofs, rawReceipt, proofPath, proofSiblings)
}

// Withdraw is a paid mutator transaction binding the contract method 0x662c7ba5.
//
// Solidity: function withdraw(bytes[] blockProofs, bytes rawReceipt, bytes proofPath, bytes proofSiblings) returns()
func (_CrossChainBridge *CrossChainBridgeTransactorSession) Withdraw(blockProofs [][]byte, rawReceipt []byte, proofPath []byte, proofSiblings []byte) (*types.Transaction, error) {
	return _CrossChainBridge.Contract.Withdraw(&_CrossChainBridge.TransactOpts, blockProofs, rawReceipt, proofPath, proofSiblings)
}

// CrossChainBridgeBridgeRouterChangedIterator is returned from FilterBridgeRouterChanged and is used to iterate over the raw logs and unpacked data for BridgeRouterChanged events raised by the CrossChainBridge contract.
type CrossChainBridgeBridgeRouterChangedIterator struct {
	Event *CrossChainBridgeBridgeRouterChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossChainBridgeBridgeRouterChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossChainBridgeBridgeRouterChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossChainBridgeBridgeRouterChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossChainBridgeBridgeRouterChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossChainBridgeBridgeRouterChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossChainBridgeBridgeRouterChanged represents a BridgeRouterChanged event raised by the CrossChainBridge contract.
type CrossChainBridgeBridgeRouterChanged struct {
	OldValue common.Address
	NewValue common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterBridgeRouterChanged is a free log retrieval operation binding the contract event 0x3e9aaaa36d36b050584098ca9083e20442f6c87221948cb8a6d79c9ef82c5165.
//
// Solidity: event BridgeRouterChanged(address oldValue, address newValue)
func (_CrossChainBridge *CrossChainBridgeFilterer) FilterBridgeRouterChanged(opts *bind.FilterOpts) (*CrossChainBridgeBridgeRouterChangedIterator, error) {

	logs, sub, err := _CrossChainBridge.contract.FilterLogs(opts, "BridgeRouterChanged")
	if err != nil {
		return nil, err
	}
	return &CrossChainBridgeBridgeRouterChangedIterator{contract: _CrossChainBridge.contract, event: "BridgeRouterChanged", logs: logs, sub: sub}, nil
}

// WatchBridgeRouterChanged is a free log subscription operation binding the contract event 0x3e9aaaa36d36b050584098ca9083e20442f6c87221948cb8a6d79c9ef82c5165.
//
// Solidity: event BridgeRouterChanged(address oldValue, address newValue)
func (_CrossChainBridge *CrossChainBridgeFilterer) WatchBridgeRouterChanged(opts *bind.WatchOpts, sink chan<- *CrossChainBridgeBridgeRouterChanged) (event.Subscription, error) {

	logs, sub, err := _CrossChainBridge.contract.WatchLogs(opts, "BridgeRouterChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossChainBridgeBridgeRouterChanged)
				if err := _CrossChainBridge.contract.UnpackLog(event, "BridgeRouterChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBridgeRouterChanged is a log parse operation binding the contract event 0x3e9aaaa36d36b050584098ca9083e20442f6c87221948cb8a6d79c9ef82c5165.
//
// Solidity: event BridgeRouterChanged(address oldValue, address newValue)
func (_CrossChainBridge *CrossChainBridgeFilterer) ParseBridgeRouterChanged(log types.Log) (*CrossChainBridgeBridgeRouterChanged, error) {
	event := new(CrossChainBridgeBridgeRouterChanged)
	if err := _CrossChainBridge.contract.UnpackLog(event, "BridgeRouterChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossChainBridgeDepositTokenIterator is returned from FilterDepositToken and is used to iterate over the raw logs and unpacked data for DepositToken events raised by the CrossChainBridge contract.
type CrossChainBridgeDepositTokenIterator struct {
	Event *CrossChainBridgeDepositToken // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossChainBridgeDepositTokenIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossChainBridgeDepositToken)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossChainBridgeDepositToken)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossChainBridgeDepositTokenIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossChainBridgeDepositTokenIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossChainBridgeDepositToken represents a DepositToken event raised by the CrossChainBridge contract.
type CrossChainBridgeDepositToken struct {
	FromChain   *big.Int
	ToChain     *big.Int
	FromAddress common.Address
	ToAddress   common.Address
	FromToken   common.Address
	ToToken     common.Address
	TotalAmount *big.Int
	Arg7        TypesTokenMetadata
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterDepositToken is a free log retrieval operation binding the contract event 0x52e2a71d8eeeaf64c3fa0a51a00f5cd6c4d0e7847d213c8d68d823a4b4288d7e.
//
// Solidity: event DepositToken(uint256 fromChain, uint256 indexed toChain, address indexed fromAddress, address indexed toAddress, address fromToken, address toToken, uint256 totalAmount, (string,string,uint256,address) arg7)
func (_CrossChainBridge *CrossChainBridgeFilterer) FilterDepositToken(opts *bind.FilterOpts, toChain []*big.Int, fromAddress []common.Address, toAddress []common.Address) (*CrossChainBridgeDepositTokenIterator, error) {

	var toChainRule []interface{}
	for _, toChainItem := range toChain {
		toChainRule = append(toChainRule, toChainItem)
	}
	var fromAddressRule []interface{}
	for _, fromAddressItem := range fromAddress {
		fromAddressRule = append(fromAddressRule, fromAddressItem)
	}
	var toAddressRule []interface{}
	for _, toAddressItem := range toAddress {
		toAddressRule = append(toAddressRule, toAddressItem)
	}

	logs, sub, err := _CrossChainBridge.contract.FilterLogs(opts, "DepositToken", toChainRule, fromAddressRule, toAddressRule)
	if err != nil {
		return nil, err
	}
	return &CrossChainBridgeDepositTokenIterator{contract: _CrossChainBridge.contract, event: "DepositToken", logs: logs, sub: sub}, nil
}

// WatchDepositToken is a free log subscription operation binding the contract event 0x52e2a71d8eeeaf64c3fa0a51a00f5cd6c4d0e7847d213c8d68d823a4b4288d7e.
//
// Solidity: event DepositToken(uint256 fromChain, uint256 indexed toChain, address indexed fromAddress, address indexed toAddress, address fromToken, address toToken, uint256 totalAmount, (string,string,uint256,address) arg7)
func (_CrossChainBridge *CrossChainBridgeFilterer) WatchDepositToken(opts *bind.WatchOpts, sink chan<- *CrossChainBridgeDepositToken, toChain []*big.Int, fromAddress []common.Address, toAddress []common.Address) (event.Subscription, error) {

	var toChainRule []interface{}
	for _, toChainItem := range toChain {
		toChainRule = append(toChainRule, toChainItem)
	}
	var fromAddressRule []interface{}
	for _, fromAddressItem := range fromAddress {
		fromAddressRule = append(fromAddressRule, fromAddressItem)
	}
	var toAddressRule []interface{}
	for _, toAddressItem := range toAddress {
		toAddressRule = append(toAddressRule, toAddressItem)
	}

	logs, sub, err := _CrossChainBridge.contract.WatchLogs(opts, "DepositToken", toChainRule, fromAddressRule, toAddressRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossChainBridgeDepositToken)
				if err := _CrossChainBridge.contract.UnpackLog(event, "DepositToken", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDepositToken is a log parse operation binding the contract event 0x52e2a71d8eeeaf64c3fa0a51a00f5cd6c4d0e7847d213c8d68d823a4b4288d7e.
//
// Solidity: event DepositToken(uint256 fromChain, uint256 indexed toChain, address indexed fromAddress, address indexed toAddress, address fromToken, address toToken, uint256 totalAmount, (string,string,uint256,address) arg7)
func (_CrossChainBridge *CrossChainBridgeFilterer) ParseDepositToken(log types.Log) (*CrossChainBridgeDepositToken, error) {
	event := new(CrossChainBridgeDepositToken)
	if err := _CrossChainBridge.contract.UnpackLog(event, "DepositToken", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// CrossChainBridgeWithdrawTokenIterator is returned from FilterWithdrawToken and is used to iterate over the raw logs and unpacked data for WithdrawToken events raised by the CrossChainBridge contract.
type CrossChainBridgeWithdrawTokenIterator struct {
	Event *CrossChainBridgeWithdrawToken // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CrossChainBridgeWithdrawTokenIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CrossChainBridgeWithdrawToken)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CrossChainBridgeWithdrawToken)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CrossChainBridgeWithdrawTokenIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CrossChainBridgeWithdrawTokenIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CrossChainBridgeWithdrawToken represents a WithdrawToken event raised by the CrossChainBridge contract.
type CrossChainBridgeWithdrawToken struct {
	FromChain   *big.Int
	FromAddress common.Address
	ToAddress   common.Address
	FromToken   common.Address
	ToToken     common.Address
	TotalAmount *big.Int
	Arg6        TypesTokenMetadata
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterWithdrawToken is a free log retrieval operation binding the contract event 0x2295be0bafe4991e6241da8918d557775630cdaaec17b6b5d8eae6a2b3d217d4.
//
// Solidity: event WithdrawToken(uint256 indexed fromChain, address indexed fromAddress, address indexed toAddress, address fromToken, address toToken, uint256 totalAmount, (string,string,uint256,address) arg6)
func (_CrossChainBridge *CrossChainBridgeFilterer) FilterWithdrawToken(opts *bind.FilterOpts, fromChain []*big.Int, fromAddress []common.Address, toAddress []common.Address) (*CrossChainBridgeWithdrawTokenIterator, error) {

	var fromChainRule []interface{}
	for _, fromChainItem := range fromChain {
		fromChainRule = append(fromChainRule, fromChainItem)
	}
	var fromAddressRule []interface{}
	for _, fromAddressItem := range fromAddress {
		fromAddressRule = append(fromAddressRule, fromAddressItem)
	}
	var toAddressRule []interface{}
	for _, toAddressItem := range toAddress {
		toAddressRule = append(toAddressRule, toAddressItem)
	}

	logs, sub, err := _CrossChainBridge.contract.FilterLogs(opts, "WithdrawToken", fromChainRule, fromAddressRule, toAddressRule)
	if err != nil {
		return nil, err
	}
	return &CrossChainBridgeWithdrawTokenIterator{contract: _CrossChainBridge.contract, event: "WithdrawToken", logs: logs, sub: sub}, nil
}

// WatchWithdrawToken is a free log subscription operation binding the contract event 0x2295be0bafe4991e6241da8918d557775630cdaaec17b6b5d8eae6a2b3d217d4.
//
// Solidity: event WithdrawToken(uint256 indexed fromChain, address indexed fromAddress, address indexed toAddress, address fromToken, address toToken, uint256 totalAmount, (string,string,uint256,address) arg6)
func (_CrossChainBridge *CrossChainBridgeFilterer) WatchWithdrawToken(opts *bind.WatchOpts, sink chan<- *CrossChainBridgeWithdrawToken, fromChain []*big.Int, fromAddress []common.Address, toAddress []common.Address) (event.Subscription, error) {

	var fromChainRule []interface{}
	for _, fromChainItem := range fromChain {
		fromChainRule = append(fromChainRule, fromChainItem)
	}
	var fromAddressRule []interface{}
	for _, fromAddressItem := range fromAddress {
		fromAddressRule = append(fromAddressRule, fromAddressItem)
	}
	var toAddressRule []interface{}
	for _, toAddressItem := range toAddress {
		toAddressRule = append(toAddressRule, toAddressItem)
	}

	logs, sub, err := _CrossChainBridge.contract.WatchLogs(opts, "WithdrawToken", fromChainRule, fromAddressRule, toAddressRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CrossChainBridgeWithdrawToken)
				if err := _CrossChainBridge.contract.UnpackLog(event, "WithdrawToken", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWithdrawToken is a log parse operation binding the contract event 0x2295be0bafe4991e6241da8918d557775630cdaaec17b6b5d8eae6a2b3d217d4.
//
// Solidity: event WithdrawToken(uint256 indexed fromChain, address indexed fromAddress, address indexed toAddress, address fromToken, address toToken, uint256 totalAmount, (string,string,uint256,address) arg6)
func (_CrossChainBridge *CrossChainBridgeFilterer) ParseWithdrawToken(log types.Log) (*CrossChainBridgeWithdrawToken, error) {
	event := new(CrossChainBridgeWithdrawToken)
	if err := _CrossChainBridge.contract.UnpackLog(event, "WithdrawToken", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
